// Generated by CoffeeScript 1.5.0
(function() {
  var Bot,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Bot = (function() {

    function Bot(board) {
      this.negamax = __bind(this.negamax, this);      this.board = board;
    }

    Bot.prototype.nextMove = function() {
      var bestMove, bestScore, i, score, _i, _len, _ref;
      bestScore = -Infinity;
      bestMove = 0;
      _ref = this.board.getOpenPositions();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        this.board.mark(i, this.board.BOT);
        score = -this.negamax(this.board.HUMAN);
        this.board.undo(i);
        if (score > bestScore) {
          bestScore = score;
          bestMove = i;
        }
      }
      return bestMove;
    };

    Bot.prototype.checkGameState = function(player) {
      var marker;
      marker = player === this.board.HUMAN ? 'X' : 'O';
      if (this.board.draw) {
        return 0;
      }
      if (this.board.winner === marker) {
        return 1;
      }
      return -1;
    };

    Bot.prototype.negamax = function(player) {
      var i, score, _i, _len, _ref;
      score = -Infinity;
      if (this.board.isGameOver()) {
        return this.checkGameState(player);
      }
      _ref = this.board.getOpenPositions();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        this.board.mark(i, player);
        score = _.max([score, -this.negamax(-player)]);
        this.board.undo(i);
      }
      return score;
    };

    return Bot;

  })();

  angular.module('noughts').factory('Bot', function() {
    return Bot;
  });

}).call(this);
